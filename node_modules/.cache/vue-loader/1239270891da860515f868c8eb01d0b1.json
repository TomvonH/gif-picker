{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/src/components/SearchBox.vue?vue&type=style&index=0&id=27029d83&lang=scss&scoped=true&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/src/components/SearchBox.vue","mtime":1592990307728},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/css-loader/dist/cjs.js","mtime":1592310892988},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1592310893175},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/postcss-loader/src/index.js","mtime":1586354046333},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/sass-loader/dist/cjs.js","mtime":1592310907538},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/gif-picker/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZhZGUtZW50ZXItYWN0aXZlIHsKICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBjdWJpYy1iZXppZXIoMSwgMC41LCAwLjgsIDEpOwogIHRyYW5zaXRpb24tZGVsYXk6IDAuMnM7Cn0KLmZhZGUtZW50ZXIgewogIG9wYWNpdHk6IDA7Cn0KCi5zbGlkaW5nLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1vdXQ7Cn0KLnNsaWRpbmctbGVhdmUtdG8gewogIGhlaWdodDogMDsKfQo="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <transition name=\"sliding\">\n      <div class=\"hero\" v-if=\"allGifs.length <= 0\">\n        <img :src=\"src\" />\n      </div>\n    </transition>\n    <MainSearch @getGifs=\"getGifs($event)\" :title=\"searchTitle\" :placeholder=\"placeholder\" />\n    <transition name=\"fade\" mode=\"out-in\">\n      <div class=\"container\" v-if=\"allGifs.length > 0\" :key=\"allGifs[0].id\">\n        <GiphsList :gifs=\"allGifs\" />\n        <Pagination\n          :current-page=\"currentPage\"\n          :page-count=\"pageCount\"\n          @nextPage=\"pageChangeHandle('next')\"\n          @previousPage=\"pageChangeHandle('previous')\"\n          @loadPage=\"pageChangeHandle\"\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport GiphsList from \"./GiphsList\";\nimport Pagination from \"./Pagination\";\nimport MainSearch from \"./MainSearch\";\n\nexport default {\n  name: \"SearchBox\",\n  components: {\n    GiphsList,\n    Pagination,\n    MainSearch\n  },\n  props: {\n    message: String\n  },\n  computed: {\n    allGifs() {\n      return this.$store.getters.allGifs;\n    },\n    allFavorites() {\n      return this.$store.getters.allFavorites;\n    }\n  },\n\n  data() {\n    return {\n      pageCount: 0,\n      currentPage: 1,\n      src: \"https://media.giphy.com/media/Xy6nEr568Vy9WAofEI/giphy.gif\",\n      searchTitle: \"What are you looking for?\",\n      placeholder: \"Just type anything you want!\"\n    };\n  },\n  mounted() {\n    this.$store.dispatch(\"resetGifs\");\n  },\n  methods: {\n    async getGifs(newSearchTerm) {\n      this.searchTerm = newSearchTerm;\n      this.currentPage = 1;\n      await this.dispatchGifs({\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    },\n    dispatchGifs({ searchTerm, currentPage }) {\n      this.gifs = this.$store.dispatch(\"fetchGifs\", {\n        searchTerm: searchTerm,\n        currentPage: currentPage\n      });\n    },\n\n    async pageChangeHandle(value) {\n      switch (value) {\n        case \"next\":\n          this.currentPage += 1;\n          break;\n        case \"previous\":\n          this.currentPage -= 1;\n          break;\n        default:\n          this.currentPage = value;\n      }\n      await this.dispatchGifs({\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.fade-enter-active {\n  transition: all 0.2s cubic-bezier(1, 0.5, 0.8, 1);\n  transition-delay: 0.2s;\n}\n.fade-enter {\n  opacity: 0;\n}\n\n.sliding-leave-active {\n  transition: all 0.2s ease-out;\n}\n.sliding-leave-to {\n  height: 0;\n}\n</style>\n"]}]}