{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/views/About.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/views/About.vue","mtime":1592400474795},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4uL2NvbXBvbmVudHMvUGFnaW5hdGlvbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uCiAgfSwKICBzdGF0aWM6IHsKICAgIHZpc2libGVJdGVtc1BlclBhZ2VDb3VudDogMTAsCiAgICBhcGlLZXk6ICJyV3FYUDRzR0dUSHVqUm1DTjFvc09vQ0VRRUJPV2liZCIsCiAgICBzZWFyY2hFbmRQb2ludDogImh0dHBzOi8vYXBpLmdpcGh5LmNvbS92MS9naWZzL3NlYXJjaD8iCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoVGVybTogIiIsCiAgICAgIGdpZnM6IFtdLAogICAgICBwYWdlQ291bnQ6IDAsCiAgICAgIGN1cnJlbnRQYWdlOiAxCiAgICB9OwogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGxldCB1cmwgPSBgJHt0aGlzLiRvcHRpb25zLnN0YXRpYy5zZWFyY2hFbmRQb2ludH0mYXBpX2tleT0ke3RoaXMuJG9wdGlvbnMuc3RhdGljLmFwaUtleX0mcT1zZWN1cml0eSZsaW1pdD0ke3RoaXMuJG9wdGlvbnMuc3RhdGljLnZpc2libGVJdGVtc1BlclBhZ2VDb3VudH1gOwoKICAgIGF3YWl0IGF4aW9zCiAgICAgIC5nZXQodXJsKQogICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgdGhpcy5idWlsZEdpZnMocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pCiAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0R2lmcygpIHsKICAgICAgbGV0IHVybCA9IGAke3RoaXMuJG9wdGlvbnMuc3RhdGljLnNlYXJjaEVuZFBvaW50fSZhcGlfa2V5PSR7dGhpcy4kb3B0aW9ucy5zdGF0aWMuYXBpS2V5fSZxPSR7dGhpcy5zZWFyY2hUZXJtfSZsaW1pdD0ke3RoaXMuJG9wdGlvbnMuc3RhdGljLnZpc2libGVJdGVtc1BlclBhZ2VDb3VudH1gOwoKICAgICAgYXhpb3MKICAgICAgICAuZ2V0KHVybCkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgIHRoaXMuYnVpbGRHaWZzKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgdGhpcy5wYWdlQ291bnQgPSBNYXRoLmNlaWwoCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbF9jb3VudCAvCiAgICAgICAgICAgICAgdGhpcy4kb3B0aW9ucy5zdGF0aWMudmlzaWJsZUl0ZW1zUGVyUGFnZUNvdW50CiAgICAgICAgICApOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5wYWdlQ291bnQpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7CiAgICB9LAoKICAgIGJ1aWxkR2lmcyhqc29uKSB7CiAgICAgIHRoaXMuZ2lmcyA9IGpzb24uZGF0YQogICAgICAgIC5tYXAoZ2lmID0+IGdpZi5pZCkKICAgICAgICAubWFwKGdpZklkID0+IHsKICAgICAgICAgIHJldHVybiBgaHR0cHM6Ly9tZWRpYS5naXBoeS5jb20vbWVkaWEvJHtnaWZJZH0vMjAwX3MuZ2lmYDsKICAgICAgICB9KTsKICAgIH0sCgogICAgcGFnZUNoYW5nZUhhbmRsZSh2YWx1ZSkgewogICAgICBzd2l0Y2ggKHZhbHVlKSB7CiAgICAgICAgY2FzZSAibmV4dCI6CiAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlICs9IDE7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJwcmV2aW91cyI6CiAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlIC09IDE7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IHZhbHVlOwogICAgICB9CiAgICAgIGxldCBvZmZzZXQgPQogICAgICAgICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiB0aGlzLiRvcHRpb25zLnN0YXRpYy52aXNpYmxlSXRlbXNQZXJQYWdlQ291bnQ7CiAgICAgIGxldCB1cmwgPSBgJHt0aGlzLiRvcHRpb25zLnN0YXRpYy5zZWFyY2hFbmRQb2ludH0mYXBpX2tleT0ke3RoaXMuJG9wdGlvbnMuc3RhdGljLmFwaUtleX0mcT0ke3RoaXMuc2VhcmNoVGVybX0mbGltaXQ9JHt0aGlzLiRvcHRpb25zLnN0YXRpYy52aXNpYmxlSXRlbXNQZXJQYWdlQ291bnR9Jm9mZnNldD0ke29mZnNldH1gOwoKICAgICAgYXhpb3MKICAgICAgICAuZ2V0KHVybCkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLmJ1aWxkR2lmcyhyZXNwb25zZS5kYXRhKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>This is the gif searchpage</h1>\n    <input v-model=\"searchTerm\" type=\"text\" />\n    <button class=\"button\" @click=\"getGifs()\">Search</button>\n    <Pagination\n      :current-page=\"currentPage\"\n      :page-count=\"pageCount\"\n      class=\"articles-list__pagination\"\n      @nextPage=\"pageChangeHandle('next')\"\n      @previousPage=\"pageChangeHandle('previous')\"\n    />\n    <div class=\"gif-container\">\n      <img v-for=\"gif in gifs\" :src=\"gif\" :key=\"gif.id\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Pagination from \"../components/Pagination\";\nexport default {\n  components: {\n    Pagination\n  },\n  static: {\n    visibleItemsPerPageCount: 10,\n    apiKey: \"rWqXP4sGGTHujRmCN1osOoCEQEBOWibd\",\n    searchEndPoint: \"https://api.giphy.com/v1/gifs/search?\"\n  },\n  data() {\n    return {\n      searchTerm: \"\",\n      gifs: [],\n      pageCount: 0,\n      currentPage: 1\n    };\n  },\n  async mounted() {\n    let url = `${this.$options.static.searchEndPoint}&api_key=${this.$options.static.apiKey}&q=security&limit=${this.$options.static.visibleItemsPerPageCount}`;\n\n    await axios\n      .get(url)\n      .then(response => {\n        console.log(response.data);\n        this.buildGifs(response.data);\n      })\n      .catch(error => console.log(error));\n  },\n  methods: {\n    getGifs() {\n      let url = `${this.$options.static.searchEndPoint}&api_key=${this.$options.static.apiKey}&q=${this.searchTerm}&limit=${this.$options.static.visibleItemsPerPageCount}`;\n\n      axios\n        .get(url)\n        .then(response => {\n          console.log(response.data);\n          this.buildGifs(response.data);\n          this.pageCount = Math.ceil(\n            response.data.pagination.total_count /\n              this.$options.static.visibleItemsPerPageCount\n          );\n          console.log(this.pageCount);\n        })\n        .catch(error => console.log(error));\n    },\n\n    buildGifs(json) {\n      this.gifs = json.data\n        .map(gif => gif.id)\n        .map(gifId => {\n          return `https://media.giphy.com/media/${gifId}/200_s.gif`;\n        });\n    },\n\n    pageChangeHandle(value) {\n      switch (value) {\n        case \"next\":\n          this.currentPage += 1;\n          break;\n        case \"previous\":\n          this.currentPage -= 1;\n          break;\n        default:\n          this.currentPage = value;\n      }\n      let offset =\n        (this.currentPage - 1) * this.$options.static.visibleItemsPerPageCount;\n      let url = `${this.$options.static.searchEndPoint}&api_key=${this.$options.static.apiKey}&q=${this.searchTerm}&limit=${this.$options.static.visibleItemsPerPageCount}&offset=${offset}`;\n\n      axios\n        .get(url)\n        .then(response => {\n          this.buildGifs(response.data);\n        })\n        .catch(error => console.log(error));\n    }\n  }\n};\n</script>\n"]}]}