{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/TransitionExpand.vue?vue&type=style&index=0&id=064a60fa&scoped=true&lang=css&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/TransitionExpand.vue","mtime":1592922663036},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/css-loader/dist/cjs.js","mtime":1592310892988},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1592310893175},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/postcss-loader/src/index.js","mtime":1586354046333},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZXhwYW5kLWVudGVyLWFjdGl2ZSwKLmV4cGFuZC1sZWF2ZS1hY3RpdmUgewogIHRyYW5zaXRpb246IGhlaWdodCAwLjNzIGVhc2UtaW4tb3V0OwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi5leHBhbmQtZW50ZXIsCi5leHBhbmQtbGVhdmUtdG8gewogIGhlaWdodDogMDsKfQo="},{"version":3,"sources":["TransitionExpand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TransitionExpand.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <transition name=\"expand\" @leave=\"leave\">\n    <slot />\n  </transition>\n</template>\n\n<script>\nexport default {\n  name: \"TransitionExpand\",\n  methods: {\n    // enter(element) {\n    //   const width = getComputedStyle(element).width;\n\n    //   element.style.width = width;\n    //   element.style.position = \"absolute\";\n    //   element.style.visibility = \"hidden\";\n    //   element.style.height = \"auto\";\n\n    //   const height = getComputedStyle(element).height;\n\n    //   element.style.width = null;\n    //   element.style.position = null;\n    //   element.style.visibility = null;\n    //   element.style.height = 0;\n\n    //   // Force repaint to make sure the\n    //   // animation is triggered correctly.\n    //   getComputedStyle(element).height;\n\n    //   // Trigger the animation.\n    //   // We use `requestAnimationFrame` because we need\n    //   // to make sure the browser has finished\n    //   // painting after setting the `height`\n    //   // to `0` in the line above.\n    //   requestAnimationFrame(() => {\n    //     element.style.height = height;\n    //   });\n    // },\n    // afterEnter(element) {\n    //   element.style.height = \"auto\";\n    // },\n    leave(element) {\n      const height = getComputedStyle(element).height;\n\n      element.style.height = height;\n\n      // Force repaint to make sure the\n      // animation is triggered correctly.\n      getComputedStyle(element).height;\n\n      requestAnimationFrame(() => {\n        element.style.height = 0;\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.expand-enter-active,\n.expand-leave-active {\n  transition: height 0.3s ease-in-out;\n  overflow: hidden;\n}\n\n.expand-enter,\n.expand-leave-to {\n  height: 0;\n}\n</style>"]}]}