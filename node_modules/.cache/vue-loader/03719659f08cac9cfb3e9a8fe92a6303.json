{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/FavoritesList.vue?vue&type=style&index=0&id=0d7da8e9&lang=scss&scoped=true&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/FavoritesList.vue","mtime":1592751000316},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/css-loader/dist/cjs.js","mtime":1592310892988},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1592310893175},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/postcss-loader/src/index.js","mtime":1586354046333},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/sass-loader/dist/cjs.js","mtime":1592310907538},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmF2b3JpdGUtY29udGFpbmVyIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7CiAgZ3JpZC1nYXA6IDIwcHg7CiAgcGFkZGluZzogMjBweCAyMHB4IDQwcHggMjBweDsKICB3aWR0aDogMTAwJTsKfQouYnRuIHsKICBib3JkZXItY29sb3I6ICMzMDMwMzA7Cn0K"},{"version":3,"sources":["FavoritesList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FavoritesList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"hero-bar\">\n      <h2 v-if=\"allFavorites.length > 0\">{{title}}</h2>\n      <h2 v-if=\"allFavorites.length <= 0\">{{titleNoFavorites}}</h2>\n      <BaseButton @click.native=\"goToHome\">{{addMoreFavorites}}</BaseButton>\n    </div>\n    <div class=\"favorite-container\">\n      <FavoriteItem\n        v-for=\"(favorite, index) in allFavorites\"\n        :gif=\"favorite\"\n        :key=\"favorite.id\"\n        :isFavorite=\"favorite.isFavorite\"\n        :comments=\"favorite.comments\"\n        @removeFromFavorites=\"removeFromFavorites(favorite, index)\"\n        @openGifInModal=\"openGifInModal(favorite)\"\n      />\n    </div>\n\n    <Modal v-show=\"isModalVisible\" @close=\"closeModal\">\n      <template v-slot:header>{{gif.title}}</template>\n      <template v-slot:body>\n        <img :src=\"`https://media.giphy.com/media/${gif.id}/giphy.gif`\" />\n        <Comments :comments=\"gif.comments\" />\n      </template>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport router from \"@/router\";\n\nimport FavoriteItem from \"./FavoriteItem\";\nimport Comments from \"./Comments\";\nimport Modal from \"./Modal\";\nimport BaseButton from \"./BaseButton\";\nexport default {\n  components: {\n    FavoriteItem,\n    Modal,\n    Comments,\n    BaseButton\n  },\n  data() {\n    return {\n      isModalVisible: false,\n      gif: {},\n      title:\n        \"Welcome to your Favorites! Is there anything else you want to add?\",\n      titleNoFavorites: \"Looks like you dont' have favorites yet.\",\n      addMoreFavorites: \"Add more favorites\"\n    };\n  },\n  computed: {\n    allFavorites() {\n      return this.$store.getters.allFavorites;\n    }\n  },\n  methods: {\n    removeFromFavorites(favorite, index) {\n      this.$store.commit(\"removeFavorite\", { favorite, index });\n    },\n    openGifInModal(favorite) {\n      this.gif = favorite;\n      this.showModal();\n    },\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    goToHome() {\n      router.push(\"/\");\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.favorite-container {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 20px;\n  padding: 20px 20px 40px 20px;\n  width: 100%;\n}\n.btn {\n  border-color: #303030;\n}\n</style>"]}]}