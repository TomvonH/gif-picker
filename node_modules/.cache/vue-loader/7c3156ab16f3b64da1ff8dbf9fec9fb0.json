{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/SearchBox.vue?vue&type=style&index=0&id=27029d83&lang=scss&scoped=true&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/SearchBox.vue","mtime":1592744440891},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/css-loader/dist/cjs.js","mtime":1592310892988},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1592310893175},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/postcss-loader/src/index.js","mtime":1586354046333},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/sass-loader/dist/cjs.js","mtime":1592310907538},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkAvc2Nzcy9fdmFyaWFibGVzIjsKCmlucHV0IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBmb250LXNpemU6IDE2cHg7CiAgY29sb3I6ICMzMDMwMzA7CiAgbGluZS1oZWlnaHQ6IDEuNTsKICBib3JkZXI6IDJweCBzb2xpZCAjMzAzMDMwOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBtYXJnaW46IDA7CiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7CiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7CiAgZmxleC1ncm93OiAxOwp9Ci5zZWFyY2gtZmllbGQgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1iYXNpczogNTAlOwoKICBidXR0b24gewogICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDsKICAgIGJvcmRlci1jb2xvcjogIzMwMzAzMDsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7CiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwOwogIH0KfQouc2VhcmNoLWJhciB7CiAgei1pbmRleDogMTsKICBwYWRkaW5nOiAyMHB4IDQwcHg7CiAgYmFja2dyb3VuZDogI2U5ZDg0OTsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBwb3NpdGlvbjogc3RpY2t5OwogIHRvcDogMDsKfQpoMiB7CiAgbWFyZ2luLXRvcDogMDsKICBmbGV4LWJhc2lzOiAxMDAlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzMwMzAzMDsKfQo="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <MainSearch @getGifs=\"getGifs($event)\" :title=\"title\" :placeholder=\"placeholder\" />\n    <div class=\"container\">\n      <div>\n        <GiphsList :gifs=\"allGifs\" />\n\n        <Pagination\n          :current-page=\"currentPage\"\n          :page-count=\"pageCount\"\n          @nextPage=\"pageChangeHandle('next')\"\n          @previousPage=\"pageChangeHandle('previous')\"\n          @loadPage=\"pageChangeHandle\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport GiphsList from \"./GiphsList\";\nimport Pagination from \"./Pagination\";\nimport MainSearch from \"./MainSearch\";\n\nexport default {\n  name: \"SearchBox\",\n  components: {\n    GiphsList,\n    Pagination,\n    MainSearch\n  },\n  props: {\n    message: String\n  },\n  computed: {\n    allGifs() {\n      return this.$store.getters.allGifs;\n    },\n    allFavorites() {\n      return this.$store.getters.allFavorites;\n    }\n  },\n\n  data() {\n    return {\n      pageCount: 0,\n      currentPage: 1,\n      title: \"Hi, What are you looking for?\",\n      placeholder: \"Just type anything you want to see in gifs\"\n    };\n  },\n  mounted() {\n    this.dispatchGifs(\"getGifs\", {\n      searchTerm: \"security\",\n      currentPage: this.currentPage\n    });\n  },\n  methods: {\n    getGifs(newSearchTerm) {\n      this.searchTerm = newSearchTerm;\n      this.currentPage = 1;\n      this.dispatchGifs(\"getGifs\", {\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    },\n    dispatchGifs(action, { searchTerm, currentPage }) {\n      this.gifs = this.$store.dispatch(action, {\n        searchTerm: searchTerm,\n        currentPage: currentPage\n      });\n    },\n\n    async pageChangeHandle(value) {\n      switch (value) {\n        case \"next\":\n          this.currentPage += 1;\n          break;\n        case \"previous\":\n          this.currentPage -= 1;\n          break;\n        default:\n          this.currentPage = value;\n      }\n      this.dispatchGifs(\"getGifs\", {\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/_variables\";\n\ninput {\n  background-color: transparent;\n  font-size: 16px;\n  color: #303030;\n  line-height: 1.5;\n  border: 2px solid #303030;\n  border-radius: 2px;\n  margin: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  flex-grow: 1;\n}\n.search-field {\n  display: flex;\n  flex-basis: 50%;\n\n  button {\n    border-top-left-radius: 0;\n    border-color: #303030;\n    border-left-width: 0px;\n    border-bottom-left-radius: 0;\n  }\n}\n.search-bar {\n  z-index: 1;\n  padding: 20px 40px;\n  background: #e9d849;\n  flex-wrap: wrap;\n  display: flex;\n  justify-content: center;\n  position: sticky;\n  top: 0;\n}\nh2 {\n  margin-top: 0;\n  flex-basis: 100%;\n  text-align: center;\n  color: #303030;\n}\n</style>"]}]}