{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/thread-loader/dist/cjs.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/eslint-loader/index.js??ref--13-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/api/giphy.api.js","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/api/giphy.api.js","mtime":1592825946779},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/thread-loader/dist/cjs.js","mtime":1592310891051},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/eslint-loader/index.js","mtime":1592310892730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGh0dHBDbGllbnQgZnJvbSAiLi9odHRwQ2xpZW50IjsKdmFyIEVORF9QT0lOVCA9ICIvdjEvZ2lmcy9zZWFyY2giOwp2YXIgYXBpS2V5ID0gInJXcVhQNHNHR1RIdWpSbUNOMW9zT29DRVFFQk9XaWJkIjsgLy8gJHtzZWFyY2hFbmRQb2ludH0mYXBpX2tleT0ke2FwaUtleX0mcT0iJHtwYXlsb2FkLnNlYXJjaFRlcm19IiZsaW1pdD0ke3Zpc2libGVJdGVtc1BlclBhZ2VDb3VudH0mb2Zmc2V0PSR7b2Zmc2V0fQoKdmFyIGdldEFsbEdpZnMgPSBmdW5jdGlvbiBnZXRBbGxHaWZzKHNlYXJjaFRlcm0sIHZpc2libGVJdGVtc1BlclBhZ2VDb3VudCwgb2Zmc2V0KSB7CiAgcmV0dXJuIGh0dHBDbGllbnQuZ2V0KEVORF9QT0lOVCwgewogICAgdXNlQ2FoZTogdHJ1ZSwKICAgIHBhcmFtczogewogICAgICBhcGlfa2V5OiBhcGlLZXksCiAgICAgIHE6IHNlYXJjaFRlcm0sCiAgICAgIGxpbWl0OiB2aXNpYmxlSXRlbXNQZXJQYWdlQ291bnQsCiAgICAgIG9mZnNldDogb2Zmc2V0CiAgICB9CiAgfSk7Cn07CgpleHBvcnQgeyBnZXRBbGxHaWZzIH07"},{"version":3,"sources":["/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/api/giphy.api.js"],"names":["httpClient","END_POINT","apiKey","getAllGifs","searchTerm","visibleItemsPerPageCount","offset","get","useCahe","params","api_key","q","limit"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,IAAMC,SAAS,GAAG,iBAAlB;AACA,IAAMC,MAAM,GAAG,kCAAf,C,CACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAaC,wBAAb,EAAuCC,MAAvC;AAAA,SACjBN,UAAU,CAACO,GAAX,CAAeN,SAAf,EAA0B;AACxBO,IAAAA,OAAO,EAAE,IADe;AAExBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAER,MADH;AAENS,MAAAA,CAAC,EAAEP,UAFG;AAGNQ,MAAAA,KAAK,EAAEP,wBAHD;AAINC,MAAAA,MAAM,EAAEA;AAJF;AAFgB,GAA1B,CADiB;AAAA,CAAnB;;AAWA,SAASH,UAAT","sourcesContent":["import httpClient from \"./httpClient\";\n\nconst END_POINT = \"/v1/gifs/search\";\nconst apiKey = \"rWqXP4sGGTHujRmCN1osOoCEQEBOWibd\";\n// ${searchEndPoint}&api_key=${apiKey}&q=\"${payload.searchTerm}\"&limit=${visibleItemsPerPageCount}&offset=${offset}\n\nconst getAllGifs = (searchTerm, visibleItemsPerPageCount, offset) =>\n  httpClient.get(END_POINT, {\n    useCahe: true,\n    params: {\n      api_key: apiKey,\n      q: searchTerm,\n      limit: visibleItemsPerPageCount,\n      offset: offset\n    }\n  });\n\nexport { getAllGifs };\n"]}]}