{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/SearchBox.vue","mtime":1592825519609},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbS9Eb2N1bWVudHMvSm9icy9Xb3JrU3RhdGVBc3Nlc3NtZW50L3NlYXJjaC1wYWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEdpcGhzTGlzdCBmcm9tICIuL0dpcGhzTGlzdCI7CmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4vUGFnaW5hdGlvbiI7CmltcG9ydCBNYWluU2VhcmNoIGZyb20gIi4vTWFpblNlYXJjaCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoQm94IiwKICBjb21wb25lbnRzOiB7CiAgICBHaXBoc0xpc3Q6IEdpcGhzTGlzdCwKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24sCiAgICBNYWluU2VhcmNoOiBNYWluU2VhcmNoCiAgfSwKICBwcm9wczogewogICAgbWVzc2FnZTogU3RyaW5nCiAgfSwKICBjb21wdXRlZDogewogICAgYWxsR2lmczogZnVuY3Rpb24gYWxsR2lmcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYWxsR2lmczsKICAgIH0sCiAgICBhbGxGYXZvcml0ZXM6IGZ1bmN0aW9uIGFsbEZhdm9yaXRlcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYWxsRmF2b3JpdGVzOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhZ2VDb3VudDogMCwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHRpdGxlOiAiSGksIFdoYXQgYXJlIHlvdSBsb29raW5nIGZvcj8iLAogICAgICBwbGFjZWhvbGRlcjogIkp1c3QgdHlwZSBhbnl0aGluZyB5b3Ugd2FudCB0byBzZWUgaW4gZ2lmcyIsCiAgICAgIGxvYWRpbmdTdGF0ZTogZmFsc2UsCiAgICAgIGxvYWRpbmdUZXh0OiAiTG9hZGluZy4uLi4iCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghKF90aGlzLmFsbEdpZnMubGVuZ3RoIDw9IDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmRpc3BhdGNoR2lmcyh7CiAgICAgICAgICAgICAgICBzZWFyY2hUZXJtOiAic3RhcnQiLAogICAgICAgICAgICAgICAgY3VycmVudFBhZ2U6IF90aGlzLmN1cnJlbnRQYWdlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRHaWZzOiBmdW5jdGlvbiBnZXRHaWZzKG5ld1NlYXJjaFRlcm0pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLnNlYXJjaFRlcm0gPSBuZXdTZWFyY2hUZXJtOwogICAgICAgICAgICAgICAgX3RoaXMyLmN1cnJlbnRQYWdlID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZGlzcGF0Y2hHaWZzKHsKICAgICAgICAgICAgICAgICAgc2VhcmNoVGVybTogX3RoaXMyLnNlYXJjaFRlcm0sCiAgICAgICAgICAgICAgICAgIGN1cnJlbnRQYWdlOiBfdGhpczIuY3VycmVudFBhZ2UKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBkaXNwYXRjaEdpZnM6IGZ1bmN0aW9uIGRpc3BhdGNoR2lmcyhfcmVmKSB7CiAgICAgIHZhciBzZWFyY2hUZXJtID0gX3JlZi5zZWFyY2hUZXJtLAogICAgICAgICAgY3VycmVudFBhZ2UgPSBfcmVmLmN1cnJlbnRQYWdlOwogICAgICB0aGlzLmdpZnMgPSB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZmV0Y2hHaWZzIiwgewogICAgICAgIHNlYXJjaFRlcm06IHNlYXJjaFRlcm0sCiAgICAgICAgY3VycmVudFBhZ2U6IGN1cnJlbnRQYWdlCiAgICAgIH0pOwogICAgfSwKICAgIHBhZ2VDaGFuZ2VIYW5kbGU6IGZ1bmN0aW9uIHBhZ2VDaGFuZ2VIYW5kbGUodmFsdWUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gdmFsdWU7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IF9jb250ZXh0My50MCA9PT0gIm5leHQiID8gMyA6IF9jb250ZXh0My50MCA9PT0gInByZXZpb3VzIiA/IDUgOiA3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzMy5jdXJyZW50UGFnZSArPSAxOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoImJyZWFrIiwgOCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF90aGlzMy5jdXJyZW50UGFnZSAtPSAxOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoImJyZWFrIiwgOCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF90aGlzMy5jdXJyZW50UGFnZSA9IHZhbHVlOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5kaXNwYXRjaEdpZnMoewogICAgICAgICAgICAgICAgICBzZWFyY2hUZXJtOiBfdGhpczMuc2VhcmNoVGVybSwKICAgICAgICAgICAgICAgICAgY3VycmVudFBhZ2U6IF90aGlzMy5jdXJyZW50UGFnZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,UAAA,MAAA,cAAA;AACA,OAAA,UAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAPA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA;AANA,GAVA;AAmBA,EAAA,IAnBA,kBAmBA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,KAAA,EAAA,+BAHA;AAIA,MAAA,WAAA,EAAA,4CAJA;AAKA,MAAA,YAAA,EAAA,KALA;AAMA,MAAA,WAAA,EAAA;AANA,KAAA;AAQA,GA5BA;AA6BA,EAAA,OA7BA,qBA6BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,KAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIA,KAAA,CAAA,YAAA,CAAA;AACA,gBAAA,UAAA,EAAA,OADA;AAEA,gBAAA,WAAA,EAAA,KAAA,CAAA;AAFA,eAAA,CAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,GAtCA;AAuCA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,aADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,aAAA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,CAAA;AAFA;AAAA,uBAGA,MAAA,CAAA,YAAA,CAAA;AACA,kBAAA,UAAA,EAAA,MAAA,CAAA,UADA;AAEA,kBAAA,WAAA,EAAA,MAAA,CAAA;AAFA,iBAAA,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KARA;AASA,IAAA,YATA,8BASA;AAAA,UAAA,UAAA,QAAA,UAAA;AAAA,UAAA,WAAA,QAAA,WAAA;AACA,WAAA,IAAA,GAAA,KAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA;AACA,QAAA,UAAA,EAAA,UADA;AAEA,QAAA,WAAA,EAAA;AAFA,OAAA,CAAA;AAIA,KAdA;AAgBA,IAAA,gBAhBA,4BAgBA,KAhBA,EAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACA,KADA;AAAA,kDAEA,MAFA,wBAKA,UALA;AAAA;;AAAA;AAGA,gBAAA,MAAA,CAAA,WAAA,IAAA,CAAA;AAHA;;AAAA;AAMA,gBAAA,MAAA,CAAA,WAAA,IAAA,CAAA;AANA;;AAAA;AASA,gBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;;AATA;AAAA;AAAA,uBAWA,MAAA,CAAA,YAAA,CAAA;AACA,kBAAA,UAAA,EAAA,MAAA,CAAA,UADA;AAEA,kBAAA,WAAA,EAAA,MAAA,CAAA;AAFA,iBAAA,CAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AA/BA;AAvCA,CAAA","sourcesContent":["<template>\n  <div>\n    <MainSearch @getGifs=\"getGifs($event)\" :title=\"title\" :placeholder=\"placeholder\" />\n    <div class=\"container\">\n      <div>\n        <GiphsList :gifs=\"allGifs\" />\n\n        <Pagination\n          :current-page=\"currentPage\"\n          :page-count=\"pageCount\"\n          @nextPage=\"pageChangeHandle('next')\"\n          @previousPage=\"pageChangeHandle('previous')\"\n          @loadPage=\"pageChangeHandle\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport GiphsList from \"./GiphsList\";\nimport Pagination from \"./Pagination\";\nimport MainSearch from \"./MainSearch\";\n\nexport default {\n  name: \"SearchBox\",\n  components: {\n    GiphsList,\n    Pagination,\n    MainSearch\n  },\n  props: {\n    message: String\n  },\n  computed: {\n    allGifs() {\n      return this.$store.getters.allGifs;\n    },\n    allFavorites() {\n      return this.$store.getters.allFavorites;\n    }\n  },\n\n  data() {\n    return {\n      pageCount: 0,\n      currentPage: 1,\n      title: \"Hi, What are you looking for?\",\n      placeholder: \"Just type anything you want to see in gifs\",\n      loadingState: false,\n      loadingText: \"Loading....\"\n    };\n  },\n  async mounted() {\n    // set loading screen\n    if (this.allGifs.length <= 0) {\n      //Show intro\n      await this.dispatchGifs({\n        searchTerm: \"start\",\n        currentPage: this.currentPage\n      });\n    }\n  },\n  methods: {\n    async getGifs(newSearchTerm) {\n      this.searchTerm = newSearchTerm;\n      this.currentPage = 1;\n      await this.dispatchGifs({\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    },\n    dispatchGifs({ searchTerm, currentPage }) {\n      this.gifs = this.$store.dispatch(\"fetchGifs\", {\n        searchTerm: searchTerm,\n        currentPage: currentPage\n      });\n    },\n\n    async pageChangeHandle(value) {\n      switch (value) {\n        case \"next\":\n          this.currentPage += 1;\n          break;\n        case \"previous\":\n          this.currentPage -= 1;\n          break;\n        default:\n          this.currentPage = value;\n      }\n      await this.dispatchGifs({\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    }\n  }\n};\n</script>"],"sourceRoot":"src/components"}]}