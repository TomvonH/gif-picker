{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/components/SearchBox.vue","mtime":1592830524316},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbS9Eb2N1bWVudHMvSm9icy9Xb3JrU3RhdGVBc3Nlc3NtZW50L3NlYXJjaC1wYWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEdpcGhzTGlzdCBmcm9tICIuL0dpcGhzTGlzdCI7CmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIi4vUGFnaW5hdGlvbiI7CmltcG9ydCBNYWluU2VhcmNoIGZyb20gIi4vTWFpblNlYXJjaCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoQm94IiwKICBjb21wb25lbnRzOiB7CiAgICBHaXBoc0xpc3Q6IEdpcGhzTGlzdCwKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24sCiAgICBNYWluU2VhcmNoOiBNYWluU2VhcmNoCiAgfSwKICBwcm9wczogewogICAgbWVzc2FnZTogU3RyaW5nCiAgfSwKICBjb21wdXRlZDogewogICAgYWxsR2lmczogZnVuY3Rpb24gYWxsR2lmcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYWxsR2lmczsKICAgIH0sCiAgICBhbGxGYXZvcml0ZXM6IGZ1bmN0aW9uIGFsbEZhdm9yaXRlcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYWxsRmF2b3JpdGVzOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhZ2VDb3VudDogMCwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHRpdGxlOiAiSGksIFdoYXQgYXJlIHlvdSBsb29raW5nIGZvcj8iLAogICAgICBwbGFjZWhvbGRlcjogIkp1c3QgdHlwZSBhbnl0aGluZyB5b3Ugd2FudCB0byBzZWUgaW4gZ2lmcyIKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCEoX3RoaXMuYWxsR2lmcy5sZW5ndGggPD0gMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZGlzcGF0Y2hHaWZzKHsKICAgICAgICAgICAgICAgIHNlYXJjaFRlcm06ICJzdGFydCIsCiAgICAgICAgICAgICAgICBjdXJyZW50UGFnZTogX3RoaXMuY3VycmVudFBhZ2UKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEdpZnM6IGZ1bmN0aW9uIGdldEdpZnMobmV3U2VhcmNoVGVybSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIuc2VhcmNoVGVybSA9IG5ld1NlYXJjaFRlcm07CiAgICAgICAgICAgICAgICBfdGhpczIuY3VycmVudFBhZ2UgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5kaXNwYXRjaEdpZnMoewogICAgICAgICAgICAgICAgICBzZWFyY2hUZXJtOiBfdGhpczIuc2VhcmNoVGVybSwKICAgICAgICAgICAgICAgICAgY3VycmVudFBhZ2U6IF90aGlzMi5jdXJyZW50UGFnZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRpc3BhdGNoR2lmczogZnVuY3Rpb24gZGlzcGF0Y2hHaWZzKF9yZWYpIHsKICAgICAgdmFyIHNlYXJjaFRlcm0gPSBfcmVmLnNlYXJjaFRlcm0sCiAgICAgICAgICBjdXJyZW50UGFnZSA9IF9yZWYuY3VycmVudFBhZ2U7CiAgICAgIHRoaXMuZ2lmcyA9IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJmZXRjaEdpZnMiLCB7CiAgICAgICAgc2VhcmNoVGVybTogc2VhcmNoVGVybSwKICAgICAgICBjdXJyZW50UGFnZTogY3VycmVudFBhZ2UKICAgICAgfSk7CiAgICB9LAogICAgcGFnZUNoYW5nZUhhbmRsZTogZnVuY3Rpb24gcGFnZUNoYW5nZUhhbmRsZSh2YWx1ZSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSB2YWx1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gX2NvbnRleHQzLnQwID09PSAibmV4dCIgPyAzIDogX2NvbnRleHQzLnQwID09PSAicHJldmlvdXMiID8gNSA6IDc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXMzLmN1cnJlbnRQYWdlICs9IDE7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgiYnJlYWsiLCA4KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3RoaXMzLmN1cnJlbnRQYWdlIC09IDE7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgiYnJlYWsiLCA4KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX3RoaXMzLmN1cnJlbnRQYWdlID0gdmFsdWU7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmRpc3BhdGNoR2lmcyh7CiAgICAgICAgICAgICAgICAgIHNlYXJjaFRlcm06IF90aGlzMy5zZWFyY2hUZXJtLAogICAgICAgICAgICAgICAgICBjdXJyZW50UGFnZTogX3RoaXMzLmN1cnJlbnRQYWdlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoBA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,UAAA,MAAA,cAAA;AACA,OAAA,UAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAPA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA;AANA,GAVA;AAmBA,EAAA,IAnBA,kBAmBA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,KAAA,EAAA,+BAHA;AAIA,MAAA,WAAA,EAAA;AAJA,KAAA;AAMA,GA1BA;AA2BA,EAAA,OA3BA,qBA2BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,KAAA,CAAA,OAAA,CAAA,MAAA,IAAA,CAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIA,KAAA,CAAA,YAAA,CAAA;AACA,gBAAA,UAAA,EAAA,OADA;AAEA,gBAAA,WAAA,EAAA,KAAA,CAAA;AAFA,eAAA,CAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,aADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,aAAA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,CAAA;AAFA;AAAA,uBAGA,MAAA,CAAA,YAAA,CAAA;AACA,kBAAA,UAAA,EAAA,MAAA,CAAA,UADA;AAEA,kBAAA,WAAA,EAAA,MAAA,CAAA;AAFA,iBAAA,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KARA;AASA,IAAA,YATA,8BASA;AAAA,UAAA,UAAA,QAAA,UAAA;AAAA,UAAA,WAAA,QAAA,WAAA;AACA,WAAA,IAAA,GAAA,KAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA;AACA,QAAA,UAAA,EAAA,UADA;AAEA,QAAA,WAAA,EAAA;AAFA,OAAA,CAAA;AAIA,KAdA;AAgBA,IAAA,gBAhBA,4BAgBA,KAhBA,EAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACA,KADA;AAAA,kDAEA,MAFA,wBAKA,UALA;AAAA;;AAAA;AAGA,gBAAA,MAAA,CAAA,WAAA,IAAA,CAAA;AAHA;;AAAA;AAMA,gBAAA,MAAA,CAAA,WAAA,IAAA,CAAA;AANA;;AAAA;AASA,gBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;;AATA;AAAA;AAAA,uBAWA,MAAA,CAAA,YAAA,CAAA;AACA,kBAAA,UAAA,EAAA,MAAA,CAAA,UADA;AAEA,kBAAA,WAAA,EAAA,MAAA,CAAA;AAFA,iBAAA,CAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AA/BA;AArCA,CAAA","sourcesContent":["<template>\n  <div>\n    <MainSearch @getGifs=\"getGifs($event)\" :title=\"title\" :placeholder=\"placeholder\" />\n    <div class=\"container\">\n      <div>\n        <GiphsList :gifs=\"allGifs\" />\n\n        <Pagination\n          :current-page=\"currentPage\"\n          :page-count=\"pageCount\"\n          @nextPage=\"pageChangeHandle('next')\"\n          @previousPage=\"pageChangeHandle('previous')\"\n          @loadPage=\"pageChangeHandle\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport GiphsList from \"./GiphsList\";\nimport Pagination from \"./Pagination\";\nimport MainSearch from \"./MainSearch\";\n\nexport default {\n  name: \"SearchBox\",\n  components: {\n    GiphsList,\n    Pagination,\n    MainSearch\n  },\n  props: {\n    message: String\n  },\n  computed: {\n    allGifs() {\n      return this.$store.getters.allGifs;\n    },\n    allFavorites() {\n      return this.$store.getters.allFavorites;\n    }\n  },\n\n  data() {\n    return {\n      pageCount: 0,\n      currentPage: 1,\n      title: \"Hi, What are you looking for?\",\n      placeholder: \"Just type anything you want to see in gifs\"\n    };\n  },\n  async mounted() {\n    // set loading screen\n    if (this.allGifs.length <= 0) {\n      //Show intro\n      await this.dispatchGifs({\n        searchTerm: \"start\",\n        currentPage: this.currentPage\n      });\n    }\n  },\n  methods: {\n    async getGifs(newSearchTerm) {\n      this.searchTerm = newSearchTerm;\n      this.currentPage = 1;\n      await this.dispatchGifs({\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    },\n    dispatchGifs({ searchTerm, currentPage }) {\n      this.gifs = this.$store.dispatch(\"fetchGifs\", {\n        searchTerm: searchTerm,\n        currentPage: currentPage\n      });\n    },\n\n    async pageChangeHandle(value) {\n      switch (value) {\n        case \"next\":\n          this.currentPage += 1;\n          break;\n        case \"previous\":\n          this.currentPage -= 1;\n          break;\n        default:\n          this.currentPage = value;\n      }\n      await this.dispatchGifs({\n        searchTerm: this.searchTerm,\n        currentPage: this.currentPage\n      });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}