{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/views/About.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/views/About.vue","mtime":1592321466442},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbS9Eb2N1bWVudHMvSm9icy9Xb3JrU3RhdGVBc3Nlc3NtZW50L3NlYXJjaC1wYWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hUZXJtOiAiIiwKICAgICAgZ2lmczogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgYXBpS2V5LCBzZWFyY2hFbmRQb2ludCwgbGltaXQsIHVybCwgX3lpZWxkJGF4aW9zJGdldCwgZGF0YTsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBhcGlLZXkgPSAicldxWFA0c0dHVEh1alJtQ04xb3NPb0NFUUVCT1dpYmQiOwogICAgICAgICAgICAgIHNlYXJjaEVuZFBvaW50ID0gImh0dHBzOi8vYXBpLmdpcGh5LmNvbS92MS9naWZzL3NlYXJjaD8iOwogICAgICAgICAgICAgIGxpbWl0ID0gMjA7CiAgICAgICAgICAgICAgdXJsID0gIiIuY29uY2F0KHNlYXJjaEVuZFBvaW50LCAiJmFwaV9rZXk9IikuY29uY2F0KGFwaUtleSwgIiZxPSIpLmNvbmNhdChfdGhpcy5zZWFyY2hUZXJtLCAiJmxpbWl0PSIpLmNvbmNhdChsaW1pdCk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCh1cmwpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CgogICAgICAgICAgICAgIF90aGlzLmJ1aWxkR2lmcyhkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIGdldEdpZnMoKSB7CiAgICAvLyAgIGxldCBhcGlLZXkgPSAicldxWFA0c0dHVEh1alJtQ04xb3NPb0NFUUVCT1dpYmQiOwogICAgLy8gICBsZXQgc2VhcmNoRW5kUG9pbnQgPSAiaHR0cHM6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvc2VhcmNoPyI7CiAgICAvLyAgIGxldCBsaW1pdCA9IDIwOwogICAgLy8gICBsZXQgdXJsID0gYCR7c2VhcmNoRW5kUG9pbnR9JmFwaV9rZXk9JHthcGlLZXl9JnE9JHsKICAgIC8vICAgICB0aGlzLnNlYXJjaFRlcm0KICAgIC8vICAgfSZsaW1pdD0ke2xpbWl0fWA7CiAgICAvLyAgIGZldGNoKHVybCkKICAgIC8vICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAvLyAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgLy8gICAgIH0pCiAgICAvLyAgICAgLnRoZW4oanNvbiA9PiB7CiAgICAvLyAgICAgICBjb25zb2xlLmxvZyhqc29uKTsKICAgIC8vICAgICAgIHRoaXMuYnVpbGRHaWZzKGpzb24pOwogICAgLy8gICAgIH0pCiAgICAvLyAgICAgLmNhdGNoKGVyciA9PiB7CiAgICAvLyAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgLy8gICAgIH0pOwogICAgLy8gICB9LAogICAgYnVpbGRHaWZzOiBmdW5jdGlvbiBidWlsZEdpZnMoanNvbikgewogICAgICB0aGlzLmdpZnMgPSBqc29uLmRhdGEubWFwKGZ1bmN0aW9uIChnaWYpIHsKICAgICAgICByZXR1cm4gZ2lmLmlkOwogICAgICB9KS5tYXAoZnVuY3Rpb24gKGdpZklkKSB7CiAgICAgICAgcmV0dXJuICJodHRwczovL21lZGlhLmdpcGh5LmNvbS9tZWRpYS8iLmNvbmNhdChnaWZJZCwgIi9naXBoeS5naWYiKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAYA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,MADA,GACA,kCADA;AAEA,cAAA,cAFA,GAEA,uCAFA;AAGA,cAAA,KAHA,GAGA,EAHA;AAKA,cAAA,GALA,aAKA,cALA,sBAKA,MALA,gBAMA,KAAA,CAAA,UANA,oBAOA,KAPA;AAAA;AAAA,qBASA,KAAA,CAAA,GAAA,CAAA,GAAA,CATA;;AAAA;AAAA;AASA,cAAA,IATA,oBASA,IATA;;AAUA,cAAA,KAAA,CAAA,SAAA,CAAA,IAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,SAtBA,qBAsBA,IAtBA,EAsBA;AACA,WAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CACA,GADA,CACA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,EAAA;AAAA,OADA,EAEA,GAFA,CAEA,UAAA,KAAA,EAAA;AACA,uDAAA,KAAA;AACA,OAJA,CAAA;AAMA;AA7BA;AApBA,CAAA","sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>This is the gif searchpage</h1>\n    <input v-model=\"searchTerm\" type=\"text\">\n    <button class=\"button\" @click=getGifs()>Search</button>\n    <div class=\"gif-container\">\n      <img v-for=\"gif in gifs\" :src=\"gif\" :key=\"gif.id\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\nexport default {\n  data() {\n    return {\n      searchTerm: \"\",\n      gifs: []\n    };\n  },\n  async mounted() {\n    let apiKey = \"rWqXP4sGGTHujRmCN1osOoCEQEBOWibd\";\n    let searchEndPoint = \"https://api.giphy.com/v1/gifs/search?\";\n    let limit = 20;\n\n    let url = `${searchEndPoint}&api_key=${apiKey}&q=${\n      this.searchTerm\n    }&limit=${limit}`;\n\n    const { data } = await axios.get(url)\n    this.buildGifs(data) \n\n  },\n  methods: {\n    // getGifs() {\n    //   let apiKey = \"rWqXP4sGGTHujRmCN1osOoCEQEBOWibd\";\n    //   let searchEndPoint = \"https://api.giphy.com/v1/gifs/search?\";\n    //   let limit = 20;\n\n    //   let url = `${searchEndPoint}&api_key=${apiKey}&q=${\n    //     this.searchTerm\n    //   }&limit=${limit}`;\n\n    //   fetch(url)\n    //     .then(response => {\n    //       return response.json();\n    //     })\n    //     .then(json => {\n    //       console.log(json);\n    //       this.buildGifs(json);\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //     });\n    //   },\n      buildGifs(json) {\n        this.gifs = json.data\n        .map(gif => gif.id)\n        .map(gifId => {\n          return `https://media.giphy.com/media/${gifId}/giphy.gif`;\n      });\n\n      }\n  }\n};\n</script>"],"sourceRoot":"src/views"}]}