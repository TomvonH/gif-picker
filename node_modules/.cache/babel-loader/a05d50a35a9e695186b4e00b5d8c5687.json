{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/eslint-loader/index.js??ref--13-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/store/index.js","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/store/index.js","mtime":1592824408945},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/eslint-loader/index.js","mtime":1592310892730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbS9Eb2N1bWVudHMvSm9icy9Xb3JrU3RhdGVBc3Nlc3NtZW50L3NlYXJjaC1wYWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgZ2V0QWxsR2lmcyB9IGZyb20gJ0AvYXBpL2dpcGh5LmFwaSc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgZmF2b3JpdGVzOiBbXSwKICAgIGFsbEdpZnM6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBhbGxHaWZzOiBmdW5jdGlvbiBhbGxHaWZzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hbGxHaWZzOwogICAgfSwKICAgIGFsbEZhdm9yaXRlczogZnVuY3Rpb24gYWxsRmF2b3JpdGVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5mYXZvcml0ZXM7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGFkZEZhdm9yaXRlOiBmdW5jdGlvbiBhZGRGYXZvcml0ZShzdGF0ZSwgZmF2b3JpdGUpIHsKICAgICAgZmF2b3JpdGVbImNvbW1lbnRzIl0gPSBbXTsKICAgICAgZmF2b3JpdGVbImlzRmF2b3JpdGUiXSA9IHRydWU7CiAgICAgIGNvbnNvbGUubG9nKGZhdm9yaXRlKTsKICAgICAgc3RhdGUuZmF2b3JpdGVzLnB1c2goZmF2b3JpdGUpOwogICAgfSwKICAgIHJlbW92ZUZhdm9yaXRlOiBmdW5jdGlvbiByZW1vdmVGYXZvcml0ZShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5mYXZvcml0ZXMuc3BsaWNlKHBheWxvYWQuaW5kZXgsIDEpOwogICAgICBwYXlsb2FkLmZhdm9yaXRlWyJpc0Zhdm9yaXRlIl0gPSBmYWxzZTsKICAgIH0sCiAgICBzZXRHaWZzOiBmdW5jdGlvbiBzZXRHaWZzKHN0YXRlLCBnaWZzKSB7CiAgICAgIGdpZnMuZm9yRWFjaChmdW5jdGlvbiAoZ2lmKSB7CiAgICAgICAgZ2lmWyJjb21tZW50cyJdID0gW107CiAgICAgICAgZ2lmWyJpc0Zhdm9yaXRlIl0gPSBmYWxzZTsKICAgICAgICBzdGF0ZS5mYXZvcml0ZXMuZm9yRWFjaChmdW5jdGlvbiAoZmF2b3JpdGUpIHsKICAgICAgICAgIGlmIChnaWYuaWQgPT09IGZhdm9yaXRlLmlkKSB7CiAgICAgICAgICAgIGdpZlsiaXNGYXZvcml0ZSJdID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHN0YXRlLmFsbEdpZnMgPSBnaWZzOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZmV0Y2hHaWZzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZmV0Y2hHaWZzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgICB2YXIgdmlzaWJsZUl0ZW1zUGVyUGFnZUNvdW50LCBvZmZzZXQsIHJlc3BvbnNlLCBnaWZzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHZpc2libGVJdGVtc1BlclBhZ2VDb3VudCA9IDI1OwogICAgICAgICAgICAgICAgb2Zmc2V0ID0gKHBheWxvYWQuY3VycmVudFBhZ2UgLSAxKSAqIHZpc2libGVJdGVtc1BlclBhZ2VDb3VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0QWxsR2lmcyhwYXlsb2FkLnNlYXJjaFRlcm0sIHZpc2libGVJdGVtc1BlclBhZ2VDb3VudCwgb2Zmc2V0KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZ2lmcyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJzZXRHaWZzIiwgZ2lmcyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBmZXRjaEdpZnMoX3gsIF94MikgewogICAgICAgIHJldHVybiBfZmV0Y2hHaWZzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmZXRjaEdpZnM7CiAgICB9KCkKICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/store/index.js"],"names":["Vue","Vuex","axios","getAllGifs","use","Store","state","favorites","allGifs","getters","allFavorites","mutations","addFavorite","favorite","console","log","push","removeFavorite","payload","splice","index","setGifs","gifs","forEach","gif","id","actions","fetchGifs","context","visibleItemsPerPageCount","offset","currentPage","searchTerm","response","data","commit","modules"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,OAAO,EAAE;AAFJ,GADqB;AAK5BC,EAAAA,OAAO,EAAE;AACPD,IAAAA,OAAO,EAAE,iBAAAF,KAAK,EAAI;AAChB,aAAOA,KAAK,CAACE,OAAb;AACD,KAHM;AAIPE,IAAAA,YAAY,EAAE,sBAAAJ,KAAK,EAAI;AACrB,aAAOA,KAAK,CAACC,SAAb;AACD;AANM,GALmB;AAa5BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACN,KAAD,EAAQO,QAAR,EAAqB;AAChCA,MAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuB,EAAvB;AACAA,MAAAA,QAAQ,CAAC,YAAD,CAAR,GAAyB,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,MAAAA,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CAAqBH,QAArB;AACD,KANQ;AAOTI,IAAAA,cAAc,EAAE,wBAACX,KAAD,EAAQY,OAAR,EAAoB;AAClCZ,MAAAA,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAuBD,OAAO,CAACE,KAA/B,EAAsC,CAAtC;AACAF,MAAAA,OAAO,CAACL,QAAR,CAAiB,YAAjB,IAAiC,KAAjC;AACD,KAVQ;AAWTQ,IAAAA,OAAO,EAAE,iBAACf,KAAD,EAAQgB,IAAR,EAAiB;AACxBA,MAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,GAAG,EAAI;AAClBA,QAAAA,GAAG,CAAC,UAAD,CAAH,GAAkB,EAAlB;AACAA,QAAAA,GAAG,CAAC,YAAD,CAAH,GAAoB,KAApB;AACAlB,QAAAA,KAAK,CAACC,SAAN,CAAgBgB,OAAhB,CAAwB,UAAAV,QAAQ,EAAI;AAClC,cAAIW,GAAG,CAACC,EAAJ,KAAWZ,QAAQ,CAACY,EAAxB,EAA4B;AAC1BD,YAAAA,GAAG,CAAC,YAAD,CAAH,GAAoB,IAApB;AACD;AACF,SAJD;AAKD,OARD;AASAlB,MAAAA,KAAK,CAACE,OAAN,GAAgBc,IAAhB;AACD;AAtBQ,GAbiB;AAqC5BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS;AAAA,+EAAE,iBAAOC,OAAP,EAAgBV,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACHW,gBAAAA,wBADG,GACwB,EADxB;AAELC,gBAAAA,MAFK,GAEI,CAACZ,OAAO,CAACa,WAAR,GAAsB,CAAvB,IAA4BF,wBAFhC;AAAA;AAAA;AAAA,uBAKgB1B,UAAU,CAACe,OAAO,CAACc,UAAT,EAAqBH,wBAArB,EAA+CC,MAA/C,CAL1B;;AAAA;AAKDG,gBAAAA,QALC;AAMHX,gBAAAA,IANG,GAMIW,QAAQ,CAACC,IAAT,CAAcA,IANlB;AAOPN,gBAAAA,OAAO,CAACO,MAAR,CAAe,SAAf,EAA0Bb,IAA1B;AAPO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADF,GArCmB;AAmD5Bc,EAAAA,OAAO,EAAE;AAnDmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\n\nimport { getAllGifs } from '@/api/giphy.api';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    favorites: [],\n    allGifs: []\n  },\n  getters: {\n    allGifs: state => {\n      return state.allGifs;\n    },\n    allFavorites: state => {\n      return state.favorites;\n    }\n  },\n  mutations: {\n    addFavorite: (state, favorite) => {\n      favorite[\"comments\"] = [];\n      favorite[\"isFavorite\"] = true\n      console.log(favorite)\n      state.favorites.push(favorite);\n    },\n    removeFavorite: (state, payload) => {\n      state.favorites.splice(payload.index, 1)\n      payload.favorite[\"isFavorite\"] = false\n    },\n    setGifs: (state, gifs) => {\n      gifs.forEach(gif => {\n        gif[\"comments\"] = [];\n        gif[\"isFavorite\"] = false;\n        state.favorites.forEach(favorite => {\n          if (gif.id === favorite.id) {\n            gif[\"isFavorite\"] = true;\n          }\n        });\n      });\n      state.allGifs = gifs\n    }\n  },\n  actions: {\n    fetchGifs: async (context, payload) => {\n      const visibleItemsPerPageCount = 25;\n      let offset = (payload.currentPage - 1) * visibleItemsPerPageCount;\n\n      try {\n        const response = await getAllGifs(payload.searchTerm, visibleItemsPerPageCount, offset);\n        let gifs = response.data.data;\n        context.commit(\"setGifs\", gifs)\n      } catch (error) {\n        // handle the error here\n      }\n    }\n  },\n  modules: {}\n});\n"]}]}