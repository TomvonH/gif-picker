{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/thread-loader/dist/cjs.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/eslint-loader/index.js??ref--13-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/api/giphy.api.js","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/api/giphy.api.js","mtime":1592814053855},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/thread-loader/dist/cjs.js","mtime":1592310891051},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/eslint-loader/index.js","mtime":1592310892730}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGh0dHBDbGllbnQgZnJvbSAnLi9odHRwQ2xpZW50JzsKdmFyIEVORF9QT0lOVCA9ICcvdjEvZ2lmcy9zZWFyY2gnOwp2YXIgYXBpS2V5ID0gInJXcVhQNHNHR1RIdWpSbUNOMW9zT29DRVFFQk9XaWJkIjsgLy8gJHtzZWFyY2hFbmRQb2ludH0mYXBpX2tleT0ke2FwaUtleX0mcT0iJHtwYXlsb2FkLnNlYXJjaFRlcm19IiZsaW1pdD0ke3Zpc2libGVJdGVtc1BlclBhZ2VDb3VudH0mb2Zmc2V0PSR7b2Zmc2V0fQoKdmFyIGdldEFsbEdpZnMgPSBmdW5jdGlvbiBnZXRBbGxHaWZzKHNlYXJjaFRlcm0sIHZpc2libGVJdGVtc1BlclBhZ2VDb3VudCwgb2Zmc2V0KSB7CiAgcmV0dXJuIGh0dHBDbGllbnQuZ2V0KEVORF9QT0lOVCwgewogICAgdXNlQ2FoZTogdHJ1ZSwKICAgIHBhcmFtczogewogICAgICBhcGlfa2V5OiBhcGlLZXksCiAgICAgIHE6IHNlYXJjaFRlcm0sCiAgICAgIGxpbWl0OiB2aXNpYmxlSXRlbXNQZXJQYWdlQ291bnQsCiAgICAgIG9mZnNldDogb2Zmc2V0CiAgICB9CiAgfSk7Cn07CgpleHBvcnQgeyBnZXRBbGxHaWZzIH07"},{"version":3,"sources":["/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/api/giphy.api.js"],"names":["httpClient","END_POINT","apiKey","getAllGifs","searchTerm","visibleItemsPerPageCount","offset","get","useCahe","params","api_key","q","limit"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,IAAMC,SAAS,GAAG,iBAAlB;AACA,IAAMC,MAAM,GAAG,kCAAf,C,CACA;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAaC,wBAAb,EAAuCC,MAAvC;AAAA,SAAkDN,UAAU,CAACO,GAAX,CAAeN,SAAf,EAA0B;AAC3FO,IAAAA,OAAO,EAAE,IADkF;AAE3FC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAER,MADL;AAEJS,MAAAA,CAAC,EAAEP,UAFC;AAGJQ,MAAAA,KAAK,EAAEP,wBAHH;AAIJC,MAAAA,MAAM,EAAEA;AAJJ;AAFmF,GAA1B,CAAlD;AAAA,CAAnB;;AAUA,SACIH,UADJ","sourcesContent":["import httpClient from './httpClient';\n\nconst END_POINT = '/v1/gifs/search';\nconst apiKey = \"rWqXP4sGGTHujRmCN1osOoCEQEBOWibd\"\n// ${searchEndPoint}&api_key=${apiKey}&q=\"${payload.searchTerm}\"&limit=${visibleItemsPerPageCount}&offset=${offset}\n\n\nconst getAllGifs = (searchTerm, visibleItemsPerPageCount, offset) => httpClient.get(END_POINT, {\n    useCahe: true,\n    params: {\n        api_key: apiKey,\n        q: searchTerm,\n        limit: visibleItemsPerPageCount,\n        offset: offset\n    }\n});\n\nexport {\n    getAllGifs\n}"]}]}