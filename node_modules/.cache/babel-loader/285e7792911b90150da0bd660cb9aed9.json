{"remainingRequest":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/views/About.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/src/views/About.vue","mtime":1592400474795},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/babel-loader/lib/index.js","mtime":1592310891052},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/cache-loader/dist/cjs.js","mtime":1592310891047},{"path":"/Users/tom/Documents/Jobs/WorkStateAssessment/search-page/node_modules/vue-loader/lib/index.js","mtime":1592310893175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbS9Eb2N1bWVudHMvSm9icy9Xb3JrU3RhdGVBc3Nlc3NtZW50L3NlYXJjaC1wYWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAiLi4vY29tcG9uZW50cy9QYWdpbmF0aW9uIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24KICB9LAogIHN0YXRpYzogewogICAgdmlzaWJsZUl0ZW1zUGVyUGFnZUNvdW50OiAxMCwKICAgIGFwaUtleTogInJXcVhQNHNHR1RIdWpSbUNOMW9zT29DRVFFQk9XaWJkIiwKICAgIHNlYXJjaEVuZFBvaW50OiAiaHR0cHM6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvc2VhcmNoPyIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hUZXJtOiAiIiwKICAgICAgZ2lmczogW10sCiAgICAgIHBhZ2VDb3VudDogMCwKICAgICAgY3VycmVudFBhZ2U6IDEKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgdXJsOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgdXJsID0gIiIuY29uY2F0KF90aGlzLiRvcHRpb25zLnN0YXRpYy5zZWFyY2hFbmRQb2ludCwgIiZhcGlfa2V5PSIpLmNvbmNhdChfdGhpcy4kb3B0aW9ucy5zdGF0aWMuYXBpS2V5LCAiJnE9c2VjdXJpdHkmbGltaXQ9IikuY29uY2F0KF90aGlzLiRvcHRpb25zLnN0YXRpYy52aXNpYmxlSXRlbXNQZXJQYWdlQ291bnQpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQodXJsKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgICAgX3RoaXMuYnVpbGRHaWZzKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEdpZnM6IGZ1bmN0aW9uIGdldEdpZnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHVybCA9ICIiLmNvbmNhdCh0aGlzLiRvcHRpb25zLnN0YXRpYy5zZWFyY2hFbmRQb2ludCwgIiZhcGlfa2V5PSIpLmNvbmNhdCh0aGlzLiRvcHRpb25zLnN0YXRpYy5hcGlLZXksICImcT0iKS5jb25jYXQodGhpcy5zZWFyY2hUZXJtLCAiJmxpbWl0PSIpLmNvbmNhdCh0aGlzLiRvcHRpb25zLnN0YXRpYy52aXNpYmxlSXRlbXNQZXJQYWdlQ291bnQpOwogICAgICBheGlvcy5nZXQodXJsKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICBfdGhpczIuYnVpbGRHaWZzKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICBfdGhpczIucGFnZUNvdW50ID0gTWF0aC5jZWlsKHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbF9jb3VudCAvIF90aGlzMi4kb3B0aW9ucy5zdGF0aWMudmlzaWJsZUl0ZW1zUGVyUGFnZUNvdW50KTsKICAgICAgICBjb25zb2xlLmxvZyhfdGhpczIucGFnZUNvdW50KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgYnVpbGRHaWZzOiBmdW5jdGlvbiBidWlsZEdpZnMoanNvbikgewogICAgICB0aGlzLmdpZnMgPSBqc29uLmRhdGEubWFwKGZ1bmN0aW9uIChnaWYpIHsKICAgICAgICByZXR1cm4gZ2lmLmlkOwogICAgICB9KS5tYXAoZnVuY3Rpb24gKGdpZklkKSB7CiAgICAgICAgcmV0dXJuICJodHRwczovL21lZGlhLmdpcGh5LmNvbS9tZWRpYS8iLmNvbmNhdChnaWZJZCwgIi8yMDBfcy5naWYiKTsKICAgICAgfSk7CiAgICB9LAogICAgcGFnZUNoYW5nZUhhbmRsZTogZnVuY3Rpb24gcGFnZUNoYW5nZUhhbmRsZSh2YWx1ZSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHN3aXRjaCAodmFsdWUpIHsKICAgICAgICBjYXNlICJuZXh0IjoKICAgICAgICAgIHRoaXMuY3VycmVudFBhZ2UgKz0gMTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJwcmV2aW91cyI6CiAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlIC09IDE7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB2YWx1ZTsKICAgICAgfQoKICAgICAgdmFyIG9mZnNldCA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiB0aGlzLiRvcHRpb25zLnN0YXRpYy52aXNpYmxlSXRlbXNQZXJQYWdlQ291bnQ7CiAgICAgIHZhciB1cmwgPSAiIi5jb25jYXQodGhpcy4kb3B0aW9ucy5zdGF0aWMuc2VhcmNoRW5kUG9pbnQsICImYXBpX2tleT0iKS5jb25jYXQodGhpcy4kb3B0aW9ucy5zdGF0aWMuYXBpS2V5LCAiJnE9IikuY29uY2F0KHRoaXMuc2VhcmNoVGVybSwgIiZsaW1pdD0iKS5jb25jYXQodGhpcy4kb3B0aW9ucy5zdGF0aWMudmlzaWJsZUl0ZW1zUGVyUGFnZUNvdW50LCAiJm9mZnNldD0iKS5jb25jYXQob2Zmc2V0KTsKICAgICAgYXhpb3MuZ2V0KHVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczMuYnVpbGRHaWZzKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["About.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>This is the gif searchpage</h1>\n    <input v-model=\"searchTerm\" type=\"text\" />\n    <button class=\"button\" @click=\"getGifs()\">Search</button>\n    <Pagination\n      :current-page=\"currentPage\"\n      :page-count=\"pageCount\"\n      class=\"articles-list__pagination\"\n      @nextPage=\"pageChangeHandle('next')\"\n      @previousPage=\"pageChangeHandle('previous')\"\n    />\n    <div class=\"gif-container\">\n      <img v-for=\"gif in gifs\" :src=\"gif\" :key=\"gif.id\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Pagination from \"../components/Pagination\";\nexport default {\n  components: {\n    Pagination\n  },\n  static: {\n    visibleItemsPerPageCount: 10,\n    apiKey: \"rWqXP4sGGTHujRmCN1osOoCEQEBOWibd\",\n    searchEndPoint: \"https://api.giphy.com/v1/gifs/search?\"\n  },\n  data() {\n    return {\n      searchTerm: \"\",\n      gifs: [],\n      pageCount: 0,\n      currentPage: 1\n    };\n  },\n  async mounted() {\n    let url = `${this.$options.static.searchEndPoint}&api_key=${this.$options.static.apiKey}&q=security&limit=${this.$options.static.visibleItemsPerPageCount}`;\n\n    await axios\n      .get(url)\n      .then(response => {\n        console.log(response.data);\n        this.buildGifs(response.data);\n      })\n      .catch(error => console.log(error));\n  },\n  methods: {\n    getGifs() {\n      let url = `${this.$options.static.searchEndPoint}&api_key=${this.$options.static.apiKey}&q=${this.searchTerm}&limit=${this.$options.static.visibleItemsPerPageCount}`;\n\n      axios\n        .get(url)\n        .then(response => {\n          console.log(response.data);\n          this.buildGifs(response.data);\n          this.pageCount = Math.ceil(\n            response.data.pagination.total_count /\n              this.$options.static.visibleItemsPerPageCount\n          );\n          console.log(this.pageCount);\n        })\n        .catch(error => console.log(error));\n    },\n\n    buildGifs(json) {\n      this.gifs = json.data\n        .map(gif => gif.id)\n        .map(gifId => {\n          return `https://media.giphy.com/media/${gifId}/200_s.gif`;\n        });\n    },\n\n    pageChangeHandle(value) {\n      switch (value) {\n        case \"next\":\n          this.currentPage += 1;\n          break;\n        case \"previous\":\n          this.currentPage -= 1;\n          break;\n        default:\n          this.currentPage = value;\n      }\n      let offset =\n        (this.currentPage - 1) * this.$options.static.visibleItemsPerPageCount;\n      let url = `${this.$options.static.searchEndPoint}&api_key=${this.$options.static.apiKey}&q=${this.searchTerm}&limit=${this.$options.static.visibleItemsPerPageCount}&offset=${offset}`;\n\n      axios\n        .get(url)\n        .then(response => {\n          this.buildGifs(response.data);\n        })\n        .catch(error => console.log(error));\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}